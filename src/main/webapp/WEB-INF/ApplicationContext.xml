<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--Druid数据源-->
    <context:property-placeholder location="/WEB-INF/some.properties" />

    <context:component-scan base-package="action" />
    <context:component-scan base-package="service" />
    <context:component-scan base-package="dao" />
    <context:component-scan base-package="task" />
    <context:component-scan base-package="email" />

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_user}"/>
        <property name="password" value="${jdbc_password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!-- 配置监控统计拦截的filters、WallFilter -->
        <property name="filters" value="stat,wall"/>
        
        <!---->
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--<bean id="sendCloud" class="email.EmailSendCloud">-->
        <!--<property name="queryMap">-->
            <!--<map>-->
                <!--<entry key="api_user" value="${sendcloud_API_USER}"></entry>-->
                <!--<entry key="api_key" value="${sendcloud_API_KEY}"></entry>-->
                <!--<entry key="from" value="${sendcloud_FROM}"></entry>-->
                <!--<entry key="fromname" value="${sendcloud_FROMNAME}"></entry>-->
                <!--<entry key="subject" value="${sendcloud_SUBJECT}"></entry>-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="URL">-->
            <!--<value>${sendcloud_URL}</value>-->
        <!--</property>-->

        <!--<property name="template_URL">-->
            <!--<value>${sendcloud_TEMPLATE}</value>-->
        <!--</property>-->
    <!--</bean>-->

    <task:annotation-driven />

    <util:map id="sendcloud_formData" map-class="java.util.IdentityHashMap" key-type="java.lang.String" value-type="java.lang.Object">
        <entry key="api_user" value="${sendcloud_API_USER}"></entry>
        <entry key="api_key" value="${sendcloud_API_KEY}"></entry>
        <entry key="from" value="${sendcloud_FROM}"></entry>
        <entry key="fromname" value="${sendcloud_FROMNAME}"></entry>
        <entry key="subject" value="${sendcloud_SUBJECT}"></entry>
    </util:map>

    <util:map id="mailgun_formData" map-class="java.util.IdentityHashMap" key-type="java.lang.String" value-type="java.lang.Object">
        <entry key="from" value="${mailgun_FROM}"></entry>
        <entry key="subject" value="${mailgun_SUBJECT}"></entry>
    </util:map>
</beans>